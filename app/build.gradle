plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.jyn.composeroad"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11

        // @OptIn(ExperimentalAnimationApi::class) 注解用到
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.2" // androidx.compose.compiler:compiler的版本
        kotlinCompilerVersion kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    /**
     * 库位置：https://developer.android.google.cn/jetpack/androidx/releases/compose
     *
     * 层级由高到低
     * compose.material	    使用现成可用的 Material Design 组件构建 Jetpack Compose UI。这是更高层级的 Compose 入口点，旨在提供与 www.material.io 上描述的组件一致的组件。
     * compose.foundation	使用现成可用的构建块编写 Jetpack Compose 应用，还可扩展 Foundation 以构建您自己的设计系统元素。
     * compose.animation	在 Jetpack Compose 应用中构建动画，丰富用户的体验。
     * compose.runtime	    Compose 的编程模型和状态管理的基本构建块，以及 Compose 编译器插件针对的核心运行时。
     * compose.ui	        与设备互动所需的 Compose UI 的基本组件，包括布局、绘图和输入。
     * compose.compiler	    借助 Kotlin 编译器插件，转换 @Composable functions（可组合函数）并启用优化功能。
     */
    implementation "androidx.compose.animation:animation:$compose_version"
//    implementation "androidx.compose.compiler:compiler:$compose_version"
    //上面composeOptions已添加，这里可以不写
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    //material扩展图标
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version" //UI的扩展功能，比如预览
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"


    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    /**
     * https://developer.android.google.cn/jetpack/compose/layouts/constraintlayout
     */
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha04"
    implementation 'androidx.activity:activity-compose:1.6.1'
    /**
     * https://developer.android.google.cn/jetpack/compose/navigation
     */
    implementation "androidx.navigation:navigation-compose:2.6.0-alpha03"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha03"
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1")
    implementation "androidx.activity:activity-ktx:1.6.1"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    /**
     * https://github.com/ReactiveX/RxJava/tree/2.x
     */
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"

    /**
     * https://developer.android.com/training/dependency-injection/hilt-android
     */
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    /**
     * 图片加载
     * https://github.com/google/accompanist
     * 文档：https://google.github.io/accompanist/
     * 中文文档：https://compose.net.cn/third-party-component/accompanist/overview/
     * 快照版本：https://oss.sonatype.org/content/repositories/snapshots/com/google/accompanist/
     */
    implementation "com.google.accompanist:accompanist-glide:0.15.0"
    implementation "com.google.accompanist:accompanist-coil:0.15.0"
    /**
     * 图片加载
     * https://coil-kt.github.io/coil/compose/
     */
    implementation "io.coil-kt:coil-compose:1.4.0"

    implementation "com.apkfuns.logutils:library:1.7.5"
}